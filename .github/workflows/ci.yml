---
name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT: limelight

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    env:
      GIN_MODE: release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
          check-latest: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.go }}-go-
      - run: go mod download
      - run: go mod verify
      - run: go build -v ./...
      - run: go test -v ./...

  analyze:
    name: Analyze
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v1
        with:
          languages: go
      - uses: github/codeql-action/autobuild@v1
      - uses: github/codeql-action/analyze@v1

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
      - uses: golangci/golangci-lint-action@v2

  build:
    name: Build
    runs-on: ubuntu-20.04
    env:
      GIN_MODE: release
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
        with:
          install: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ env.PROJECT }}
          flavor: |
            latest=true
            prefix=
            suffix=
          tags: |
            type=ref,event=branch
            type=sha,prefix=,suffix=,format=long
            type=sha,prefix=,suffix=,format=short
      - uses: docker/build-push-action@v3
        id: build
        with:
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.actor }}/${{ env.PROJECT }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.actor }}/${{ env.PROJECT }}:buildcache,mode=max
      - run: echo ${{ steps.build.outputs.digest }}
      - uses: azure/container-scan@v0.1
        continue-on-error: true
        with:
          image-name: ghcr.io/${{ github.actor }}/${{ env.PROJECT }}
