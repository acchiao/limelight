---
name: CI

on:
  push:
    branches: [ main ]
    tags: "v*"
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_NAME: rng
  REGISTRY_URL: registry.hub.docker.com
  GIN_MODE: release

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        go: [ "1.16", "1.17" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.go }}-go-
      - run: go mod download
      - run: go mod verify
      - run: go build -v ./...
      - run: go test -v ./...

  build:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        with:
          install: true
      - uses: docker/login-action@v1
        with:
          registry: registry.hub.docker.com
          username: ${{ secrets.REGISTRY_NAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
          logout: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ env.PROJECT_NAME }}
            ${{ env.REGISTRY_URL }}/${{ secrets.REGISTRY_NAME }}/${{ env.PROJECT_NAME }}
          flavor: |
            latest=true
            prefix=
            suffix=
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{raw}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=sha,prefix=,suffix=,format=long
            type=sha,prefix=,suffix=,format=short
      - uses: docker/build-push-action@v2
        id: build
        with:
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          cache-from: type=registry,ref=${{ env.REGISTRY_URL }}/${{ secrets.REGISTRY_NAME }}/${{ env.PROJECT_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_URL }}/${{ secrets.REGISTRY_NAME }}/${{ env.PROJECT_NAME }}:buildcache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - run: echo ${{ steps.build.outputs.digest }}

  verify:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: helm/kind-action@v1.2.0
      - run: kubectl apply -f manifests
      - run: kubectl delete -f manifests
