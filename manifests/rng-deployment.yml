---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rng
  namespace: rng
  labels:
    app.kubernetes.io/name: "rng"
    tags.datadoghq.com/env: "production"
    tags.datadoghq.com/service: "rng"
    tags.datadoghq.com/version: "0.1.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rng
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: "rng"
        tags.datadoghq.com/env: "production"
        tags.datadoghq.com/service: "rng"
        tags.datadoghq.com/version: "0.1.0"
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: rng
          image: docker.io/acchiao/rng:latest
          imagePullPolicy: Always
          env:
            - name: GIN_MODE
              value: release
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
          ports:
            - name: rng-port
              containerPort: 3000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: rng-port
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 2
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
            limits:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
